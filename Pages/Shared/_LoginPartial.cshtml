@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" class="nav-link fr-nav-link"><i class="fe fe-user"></i>@UserManager.GetUserName(User).ToUpper()</a>
    </li>

    @if (User.IsInRole("Admin"))
    {
        <li class="nav-item">
            <a id="register" asp-area="Identity" asp-page="/Account/Register" class="nav-link fr-nav-link"> REGISTER</a>
        </li>
    }

    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link fr-nav-link"> LOGOUT</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a id="login" asp-area="Identity" asp-page="/Account/Login" class="nav-link fr-nav-link"><i class="fe fe-user"></i> LOGIN</a>
    </li>
}
